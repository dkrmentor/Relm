{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://192.168.100.8:3001\";\nexport const postLogin = async (username, password) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/login`, {\n      username,\n      password\n    });\n    console.log(response.data.token);\n    const token = response.data.token;\n    localStorage.setItem(\"token\", token);\n    const userId = response.data.id;\n    console.log(userId);\n    localStorage.setItem(\"userId\", userId);\n    console.log(localStorage.getItem(\"userId\"));\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const userProfile = async (userId, token, profileData) => {\n  try {\n    const formData = new FormData();\n\n    // Add the existing fields\n    formData.append('name', profileData.name);\n    formData.append('email', profileData.email);\n    formData.append('gender', profileData.gender);\n    formData.append('birthday', profileData.birthday);\n    formData.append('current_city', profileData.current_city);\n    profileData.photos.forEach(photo => {\n      formData.append('images', photo);\n    });\n    formData.append('known_languages', profileData.known_languages);\n\n    // Add the interest fields without stringifying it\n    formData.append('interest', JSON.stringify(profileData.interest));\n    console.log(formData.interest);\n    const response = await axios.put(`${BASE_URL}/userProfile/${userId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","postLogin","username","password","response","post","console","log","data","token","localStorage","setItem","userId","id","getItem","error","userProfile","profileData","formData","FormData","append","name","email","gender","birthday","current_city","photos","forEach","photo","known_languages","JSON","stringify","interest","put","headers","Authorization"],"sources":["C:/Users/dkrme/Desktop/Relm/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\nconst BASE_URL = \"http://192.168.100.8:3001\";\r\n\r\nexport const postLogin = async (username, password) => {\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/login`, { username, password });\r\n    console.log(response.data.token);\r\n    const token = response.data.token;\r\n    localStorage.setItem(\"token\", token);\r\n    const userId = response.data.id;\r\n    console.log(userId);\r\n    localStorage.setItem(\"userId\", userId);\r\n    console.log(localStorage.getItem(\"userId\"));\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\nexport const userProfile = async (userId, token, profileData) => {\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    // Add the existing fields\r\n    formData.append('name', profileData.name);\r\n    formData.append('email', profileData.email);\r\n    formData.append('gender', profileData.gender);\r\n    formData.append('birthday', profileData.birthday);\r\n    formData.append('current_city', profileData.current_city);\r\n    profileData.photos.forEach((photo) => {\r\n      formData.append('images', photo);\r\n    });\r\n    formData.append('known_languages', profileData.known_languages);\r\n\r\n    // Add the interest fields without stringifying it\r\n    formData.append('interest', JSON.stringify(profileData.interest));\r\n    console.log(formData.interest);\r\n\r\n    const response = await axios.put(`${BASE_URL}/userProfile/${userId}`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,QAAO,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC9EG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAChC,MAAMA,KAAK,GAAGL,QAAQ,CAACI,IAAI,CAACC,KAAK;IACjCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,MAAMG,MAAM,GAAGR,QAAQ,CAACI,IAAI,CAACK,EAAE;IAC/BP,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;IACnBF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,MAAM,CAAC;IACtCN,OAAO,CAACC,GAAG,CAACG,YAAY,CAACI,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3C,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOJ,MAAM,EAAEH,KAAK,EAAEQ,WAAW,KAAK;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;;IAE/B;IACAD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,WAAW,CAACI,IAAI,CAAC;IACzCH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,WAAW,CAACK,KAAK,CAAC;IAC3CJ,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,WAAW,CAACM,MAAM,CAAC;IAC7CL,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACO,QAAQ,CAAC;IACjDN,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEH,WAAW,CAACQ,YAAY,CAAC;IACzDR,WAAW,CAACS,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAK;MACpCV,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEQ,KAAK,CAAC;IAClC,CAAC,CAAC;IACFV,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEH,WAAW,CAACY,eAAe,CAAC;;IAE/D;IACAX,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEU,IAAI,CAACC,SAAS,CAACd,WAAW,CAACe,QAAQ,CAAC,CAAC;IACjE1B,OAAO,CAACC,GAAG,CAACW,QAAQ,CAACc,QAAQ,CAAC;IAE9B,MAAM5B,QAAQ,GAAG,MAAML,KAAK,CAACkC,GAAG,CAAE,GAAEjC,QAAS,gBAAeY,MAAO,EAAC,EAAEM,QAAQ,EAAE;MAC9EgB,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB;QACrCC,aAAa,EAAG,UAAS1B,KAAM;MACjC;IACF,CAAC,CAAC;IAEFH,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAI;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}