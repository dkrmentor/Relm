{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dkrme\\\\Desktop\\\\Relm\\\\frontend\\\\src\\\\components\\\\common\\\\InputValidation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputValidation = _ref => {\n  _s();\n  let {\n    value,\n    name,\n    label,\n    type,\n    required,\n    minLength,\n    maxLength,\n    pattern,\n    onChange\n  } = _ref;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleInputChange = event => {\n    onChange(event);\n    validateInput(event.target.value);\n  };\n  const validateInput = value => {\n    if (required && !value) {\n      setErrorMessage(`${label} is required.`);\n    } else if (type === \"email\" && !/\\S+@\\S+\\.\\S+/.test(value)) {\n      setErrorMessage(`Invalid email address.`);\n    } else if (minLength && value.length < minLength) {\n      setErrorMessage(`${label} must be at least ${minLength} characters long.`);\n    } else if (maxLength && value.length > maxLength) {\n      setErrorMessage(`${label} must not exceed ${maxLength} characters.`);\n    } else if (pattern && !value.match(pattern)) {\n      setErrorMessage(`${label} is invalid.`);\n    } else {\n      setErrorMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-validation\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      value: value,\n      id: name,\n      name: name,\n      onChange: handleInputChange,\n      autoComplete: \"new-password\",\n      placeholder: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(InputValidation, \"lxcuhsXa5Nyd5poIg+ycrIcH1MU=\");\n_c = InputValidation;\nexport default InputValidation;\nvar _c;\n$RefreshReg$(_c, \"InputValidation\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputValidation","_ref","_s","value","name","label","type","required","minLength","maxLength","pattern","onChange","errorMessage","setErrorMessage","handleInputChange","event","validateInput","target","test","length","match","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","autoComplete","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/dkrme/Desktop/Relm/frontend/src/components/common/InputValidation.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst InputValidation = ({\r\n  value,\r\n  name,\r\n  label,\r\n  type,\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n  pattern,\r\n  onChange,\r\n}) => {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    onChange(event);\r\n    validateInput(event.target.value);\r\n  };\r\n\r\n  const validateInput = (value) => {\r\n    if (required && !value) {\r\n      setErrorMessage(`${label} is required.`);\r\n    } else if (type === \"email\" && !/\\S+@\\S+\\.\\S+/.test(value)) {\r\n      setErrorMessage(`Invalid email address.`);\r\n    } else if (minLength && value.length < minLength) {\r\n      setErrorMessage(`${label} must be at least ${minLength} characters long.`);\r\n    } else if (maxLength && value.length > maxLength) {\r\n      setErrorMessage(`${label} must not exceed ${maxLength} characters.`);\r\n    } else if (pattern && !value.match(pattern)) {\r\n      setErrorMessage(`${label} is invalid.`);\r\n    } else {\r\n      setErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-validation\">\r\n      <label htmlFor={name}>{label}:</label>\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        id={name}\r\n        name={name}\r\n        onChange={handleInputChange}\r\n        autoComplete=\"new-password\"\r\n        placeholder={label}\r\n      />\r\n      {errorMessage && <span className=\"error-message\">{errorMessage}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputValidation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGC,IAAA,IAUlB;EAAAC,EAAA;EAAA,IAVmB;IACvBC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC,IAAI;IACJC,QAAQ;IACRC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACF,CAAC,GAAAV,IAAA;EACC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMiB,iBAAiB,GAAIC,KAAK,IAAK;IACnCJ,QAAQ,CAACI,KAAK,CAAC;IACfC,aAAa,CAACD,KAAK,CAACE,MAAM,CAACd,KAAK,CAAC;EACnC,CAAC;EAED,MAAMa,aAAa,GAAIb,KAAK,IAAK;IAC/B,IAAII,QAAQ,IAAI,CAACJ,KAAK,EAAE;MACtBU,eAAe,CAAE,GAAER,KAAM,eAAc,CAAC;IAC1C,CAAC,MAAM,IAAIC,IAAI,KAAK,OAAO,IAAI,CAAC,cAAc,CAACY,IAAI,CAACf,KAAK,CAAC,EAAE;MAC1DU,eAAe,CAAE,wBAAuB,CAAC;IAC3C,CAAC,MAAM,IAAIL,SAAS,IAAIL,KAAK,CAACgB,MAAM,GAAGX,SAAS,EAAE;MAChDK,eAAe,CAAE,GAAER,KAAM,qBAAoBG,SAAU,mBAAkB,CAAC;IAC5E,CAAC,MAAM,IAAIC,SAAS,IAAIN,KAAK,CAACgB,MAAM,GAAGV,SAAS,EAAE;MAChDI,eAAe,CAAE,GAAER,KAAM,oBAAmBI,SAAU,cAAa,CAAC;IACtE,CAAC,MAAM,IAAIC,OAAO,IAAI,CAACP,KAAK,CAACiB,KAAK,CAACV,OAAO,CAAC,EAAE;MAC3CG,eAAe,CAAE,GAAER,KAAM,cAAa,CAAC;IACzC,CAAC,MAAM;MACLQ,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BvB,OAAA;MAAOwB,OAAO,EAAEnB,IAAK;MAAAkB,QAAA,GAAEjB,KAAK,EAAC,GAAC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACtC5B,OAAA;MACEO,IAAI,EAAEA,IAAK;MACXH,KAAK,EAAEA,KAAM;MACbyB,EAAE,EAAExB,IAAK;MACTA,IAAI,EAAEA,IAAK;MACXO,QAAQ,EAAEG,iBAAkB;MAC5Be,YAAY,EAAC,cAAc;MAC3BC,WAAW,EAAEzB;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,EACDf,YAAY,iBAAIb,OAAA;MAAMsB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEV;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClE;AAEV,CAAC;AAACzB,EAAA,CAjDIF,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAmDrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}