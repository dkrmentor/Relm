{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://192.168.0.146:3001\";\nexport const postLogin = async (username, password) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/login`, {\n      username,\n      password\n    });\n    console.log(response.data.token);\n    const token = response.data.token;\n    localStorage.setItem(\"token\", token);\n    const userId = response.data.id;\n    console.log(userId);\n    localStorage.setItem(\"userId\", userId);\n    console.log(localStorage.getItem(\"userId\"));\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const userProfile = async (userId, token, profileData, cityList) => {\n  try {\n    console.log(\"profileData\", profileData);\n    const formData = new FormData();\n    // Add the existing fields\n    formData.append('name', profileData.name);\n    formData.append('email', profileData.email);\n    formData.append('gender', profileData.gender);\n    formData.append('birthday', profileData.birthday);\n    formData.append('current_city', profileData.current_city);\n    // Check if photos exist and add them to the form data\n    if (profileData.photos) {\n      profileData.photos.forEach(image => {\n        formData.append('images', image);\n      });\n    }\n    formData.append('known_languages', profileData.known_languages);\n    formData.append('interest', JSON.stringify(profileData.interest));\n\n    // Add the city list\n    formData.append('cityList', JSON.stringify(cities));\n    console.log(formData);\n    console.log(profileData.interest);\n    const response = await axios.put(`${BASE_URL}/userProfile/${userId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","postLogin","username","password","response","post","console","log","data","token","localStorage","setItem","userId","id","getItem","error","userProfile","profileData","cityList","formData","FormData","append","name","email","gender","birthday","current_city","photos","forEach","image","known_languages","JSON","stringify","interest","cities","put","headers","Authorization"],"sources":["C:/Users/Hobopk/Desktop/Relm/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = \"http://192.168.0.146:3001\";\n\nexport const postLogin = async (username, password) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/login`, { username, password });\n    console.log(response.data.token);\n    const token = response.data.token;\n    localStorage.setItem(\"token\", token);\n    const userId = response.data.id;\n    console.log(userId);\n    localStorage.setItem(\"userId\", userId);\n    console.log(localStorage.getItem(\"userId\"));\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const userProfile = async (userId, token, profileData, cityList) => {\n  try {\n    console.log(\"profileData\", profileData);\n    const formData = new FormData();\n    // Add the existing fields\n    formData.append('name', profileData.name);\n    formData.append('email', profileData.email);\n    formData.append('gender', profileData.gender);\n    formData.append('birthday', profileData.birthday);\n    formData.append('current_city', profileData.current_city);\n    // Check if photos exist and add them to the form data\n    if (profileData.photos) {\n      profileData.photos.forEach((image) => {\n        formData.append('images', image);\n      });\n    }\n\n    formData.append('known_languages', profileData.known_languages);\n\n    formData.append('interest', JSON.stringify(profileData.interest));\n\n    // Add the city list\n    formData.append('cityList', JSON.stringify(cities));\n\n    console.log(formData);\n    console.log(profileData.interest);\n    const response = await axios.put(`${BASE_URL}/userProfile/${userId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,QAAO,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC9EG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAChC,MAAMA,KAAK,GAAGL,QAAQ,CAACI,IAAI,CAACC,KAAK;IACjCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,MAAMG,MAAM,GAAGR,QAAQ,CAACI,IAAI,CAACK,EAAE;IAC/BP,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;IACnBF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,MAAM,CAAC;IACtCN,OAAO,CAACC,GAAG,CAACG,YAAY,CAACI,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3C,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOJ,MAAM,EAAEH,KAAK,EAAEQ,WAAW,EAAEC,QAAQ,KAAK;EACzE,IAAI;IACFZ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEU,WAAW,CAAC;IACvC,MAAME,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B;IACAD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,WAAW,CAACK,IAAI,CAAC;IACzCH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,WAAW,CAACM,KAAK,CAAC;IAC3CJ,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,WAAW,CAACO,MAAM,CAAC;IAC7CL,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,WAAW,CAACQ,QAAQ,CAAC;IACjDN,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEJ,WAAW,CAACS,YAAY,CAAC;IACzD;IACA,IAAIT,WAAW,CAACU,MAAM,EAAE;MACtBV,WAAW,CAACU,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAK;QACpCV,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEQ,KAAK,CAAC;MAClC,CAAC,CAAC;IACJ;IAEAV,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEJ,WAAW,CAACa,eAAe,CAAC;IAE/DX,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEU,IAAI,CAACC,SAAS,CAACf,WAAW,CAACgB,QAAQ,CAAC,CAAC;;IAEjE;IACAd,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEU,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,CAAC;IAEnD5B,OAAO,CAACC,GAAG,CAACY,QAAQ,CAAC;IACrBb,OAAO,CAACC,GAAG,CAACU,WAAW,CAACgB,QAAQ,CAAC;IACjC,MAAM7B,QAAQ,GAAG,MAAML,KAAK,CAACoC,GAAG,CAAE,GAAEnC,QAAS,gBAAeY,MAAO,EAAC,EAAEO,QAAQ,EAAE;MAC9EiB,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB;QACrCC,aAAa,EAAG,UAAS5B,KAAM;MACjC;IACF,CAAC,CAAC;IAEFH,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAI;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}